@model IEnumerable<dynamic>
@using Newtonsoft.Json

<h2 class="text-center mb-4">🎵 My Song Statistics</h2>

<!-- Summary Cards -->
<div class="row text-center mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white p-3">
            <h4>Total Plays (Last Year)</h4>
            <h2>@ViewBag.TotalPlaysLastYear</h2>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white p-3">
            <h4>Total Plays (Last Month)</h4>
            <h2>@ViewBag.TotalPlaysLastMonth</h2>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white p-3">
            <h4>Total Likes (Last Year)</h4>
            <h2>@ViewBag.TotalLikesLastYear</h2>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-danger text-white p-3">
            <h4>Total Likes (Last Month)</h4>
            <h2>@ViewBag.TotalLikesLastMonth</h2>
        </div>
    </div>
</div>

<!-- Chart Container -->
<div class="row">
    <div class="col-md-6">
        <canvas id="playsChart"></canvas>
    </div>
    <div class="col-md-6">
        <canvas id="likesChart"></canvas>
    </div>
</div>

<!-- Song Statistics Table -->
<table class="table table-striped table-hover mt-4">
    <thead class="table-dark">
        <tr>
            <th>Song Title</th>
            <th>Playlists</th>
            <th>Plays</th>
            <th>Likes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var song in Model)
        {
            <tr>
                <td>@song.SongTitle</td>
                <td>@song.PlaylistCount</td>
                <td>@song.PlayCount</td>
                <td>@song.LikeCount</td>
            </tr>
        }
    </tbody>
</table>

<!-- ChartJS Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const songTitles = @Html.Raw(JsonConvert.SerializeObject(Model.Select(s => s.SongTitle)));
        const playCounts = @Html.Raw(JsonConvert.SerializeObject(Model.Select(s => s.PlayCount)));
        const likeCounts = @Html.Raw(JsonConvert.SerializeObject(Model.Select(s => s.LikeCount)));
        const playlistCounts = @Html.Raw(JsonConvert.SerializeObject(Model.Select(s => s.PlaylistCount)));

        // Plays Chart
        new Chart(document.getElementById('playsChart'), {
            type: 'bar',
            data: {
                labels: songTitles,
                datasets: [{
                    label: 'Plays',
                    data: playCounts,
                    backgroundColor: 'rgba(54, 162, 235, 0.6)'
                }]
            }
        });

        // Likes Chart
        new Chart(document.getElementById('likesChart'), {
            type: 'bar',
            data: {
                labels: songTitles,
                datasets: [{
                    label: 'Likes',
                    data: likeCounts,
                    backgroundColor: 'rgba(255, 99, 132, 0.6)'
                }]
            }
        });

        // Playlists Chart
        new Chart(document.getElementById('playlistsChart'), {
            type: 'bar',
            data: {
                labels: songTitles,
                datasets: [{
                    label: 'Playlists',
                    data: playlistCounts,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)'
                }]
            }
        });

    });
</script>

<!-- Playlists Chart -->
<div class="row mt-4">
    <div class="col-md-6 offset-md-3">
        <canvas id="playlistsChart"></canvas>
    </div>
</div>
