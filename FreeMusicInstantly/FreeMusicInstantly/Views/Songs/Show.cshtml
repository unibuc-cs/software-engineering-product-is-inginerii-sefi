@model FreeMusicInstantly.Models.Song

<h1> @Model.Title</h1>

<div style="text-align: center; margin: 20px 0;">
    <img src="~/files/@ViewBag.PhotoCover" alt="@Model.Title" style="max-width: 300px; height: auto; margin-bottom: 20px;" />
</div>

<p style="font-size: 18px;">@Model.Description</p>

<div id="custom-audio-player" style="text-align: center; margin: 30px 0;">
    <audio id="audio" src="~/files/@Model.SongFile"></audio>
    <button id="play-pause" style="
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: #007bff;
        color: white;
        border: none;
        font-size: 24px;
        cursor: pointer;
    ">
        ▶
    </button>
    <div style="margin-top: 15px;">
        <input id="seek-bar" type="range" value="0" step="0.1" style="
            width: 100%;
            max-width: 600px;
        ">
    </div>
    <div style="margin-top: 10px; font-size: 14px;">
        <span id="current-time">0:00</span> / <span id="total-time">0:00</span>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const audio = document.getElementById('audio');
        const playPauseButton = document.getElementById('play-pause');
        const seekBar = document.getElementById('seek-bar');
        const currentTimeDisplay = document.getElementById('current-time');
        const totalTimeDisplay = document.getElementById('total-time');

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        playPauseButton.addEventListener('click', function () {
            if (audio.paused) {
                audio.play();
                playPauseButton.textContent = '⏸';
            } else {
                audio.pause();
                playPauseButton.textContent = '▶';
            }
        });

        audio.addEventListener('loadedmetadata', function () {
            totalTimeDisplay.textContent = formatTime(audio.duration);
        });

        audio.addEventListener('timeupdate', function () {
            seekBar.value = (audio.currentTime / audio.duration) * 100;
            currentTimeDisplay.textContent = formatTime(audio.currentTime);
        });

        seekBar.addEventListener('input', function () {
            audio.currentTime = (seekBar.value / 100) * audio.duration;
        });
    });
</script>
