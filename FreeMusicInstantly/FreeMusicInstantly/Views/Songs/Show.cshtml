@model FreeMusicInstantly.Models.Song

@if (TempData["message"] != null)
{
    <div class="alert @TempData["messageType"] p-3 rounded-3 text-center mb-5">
        @TempData["message"]
    </div>
}

<h1 style="text-align: center; margin: 20px 0;"> @Model.Title</h1>

@* <div style="text-align: center; margin: 20px 0;"> *@
@*     <img src="~/files/@ViewBag.PhotoCover" alt="@Model.Title" style="max-width: 300px; height: auto; margin-bottom: 20px;" /> *@
@* </div> *@

<h5 class="text-muted" style="text-align: center; margin: 20px 0;">@Model.Description</h5>


<div id="custom-audio-player" style="text-align: center; margin: 30px 0;">
    <audio id="audio" data-song-id="@Model.Id" src="~/files/@Model.SongFile"></audio>
    <button id="play-pause" style="
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: #007bff;
        color: white;
        border: none;
        font-size: 24px;
        cursor: pointer;
    ">
        ▶
    </button>
    <div style="margin-top: 15px;">
        <input id="seek-bar" type="range" value="0" step="0.1" style="
            width: 100%;
            max-width: 600px;
        ">
    </div>
    <div style="margin-top: 10px; font-size: 14px;">
        <span id="current-time">0:00</span> / <span id="total-time">0:00</span>
    </div>
</div>

<script>
        document.addEventListener('DOMContentLoaded', function () {
        console.log("Script loaded!");

        const audio = document.getElementById('audio');
        const playPauseButton = document.getElementById('play-pause');
        const seekBar = document.getElementById('seek-bar');
        const currentTimeDisplay = document.getElementById('current-time');
        const totalTimeDisplay = document.getElementById('total-time');
        const playCountDisplay = document.getElementById('play-count');
        const likeButton = document.getElementById('like-button');
        const likeText = document.getElementById('like-text');
        const likeCountDisplay = document.getElementById('like-count');

        const songId = audio?.getAttribute('data-song-id');
        let playTracked = false;
        let playRequestSent = false;

        if (!audio) {
            console.error("Audio element not found!");
            return;
        }

        console.log("Audio element found:", audio);

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        audio.addEventListener('loadedmetadata', function () {
            if (audio.duration) {
                totalTimeDisplay.textContent = formatTime(audio.duration);
                seekBar.max = audio.duration;
            }
        });

        audio.addEventListener('timeupdate', function () {
            if (audio.duration) {
                seekBar.value = audio.currentTime;
                currentTimeDisplay.textContent = formatTime(audio.currentTime);
            }
        });

        seekBar.addEventListener('input', function () {
            if (audio.duration) {
                audio.currentTime = seekBar.value;
            }
        });

        playPauseButton.addEventListener('click', function () {
            if (audio.paused) {
                audio.play().then(() => {
                    console.log("Song is playing!");
                    playPauseButton.textContent = '⏸';
                }).catch(error => {
                    console.error("Playback error:", error);
                    alert("Autoplay blocked. Click again to play.");
                });
            } else {
                audio.pause();
                playPauseButton.textContent = '▶';
            }
        });

        audio.addEventListener('play', function () {
            if (!songId) {
                console.error("songId is missing!");
                return;
            }

            if (!playTracked && !playRequestSent) {
                playRequestSent = true;

                fetch('/Plays/TrackPlay?songId=' + songId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        playCountDisplay.textContent = data.totalPlays;
                        playTracked = true;
                    } else {
                        console.error("Error tracking play:", data.message);
                    }
                })
                .catch(error => console.error("Error tracking play:", error))
                .finally(() => playRequestSent = false);
            }
        });

        likeButton.addEventListener('click', function () {
            if (!songId) {
                console.error("songId is missing!");
                return;
            }

            fetch('/Likes/ToggleLike?songId=' + songId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    likeCountDisplay.textContent = data.totalLikes;
                    likeText.textContent = data.liked ? "Unlike" : "Like";
                } else {
                    console.error("Error toggling like:", data.message);
                }
            })
            .catch(error => console.error("Error toggling like:", error));
        });

    });


</script>


@* @if (ViewBag.EsteAdmin || ViewBag.UserCurent == Model.UserId) *@
@* { *@
@*     <form method="get"> *@
@*         <button type="submit" class="buton_editare" formaction="/Songs/Edit/@Model.Id"> *@
@*             <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16"> *@
@*                 <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" /> *@
@*                 <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" /> *@
@*             </svg> *@
@*             Edit *@
@*         </button> *@
@*     </form> *@
@*     <form method="post" action="/Songs/Delete/@Model.Id"> *@
@*         <button type="submit" class="buton_stergere button2" onclick="return confirm('Are you sure you want to delete this song')"> *@
@*             <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16"> *@
@*                 <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" /> *@
@*             </svg> *@
@*             Delete *@
@*         </button> *@
@*     </form> *@
@* } *@

<div class="container">

    <div class="row">

        <div class="col-md-2"></div>

        <div class="col-md-8">

            <div class="card">

                <div class="d-flex justify-content-center align-items-center gap-3 p-3 border-1 border-top">
                @if (ViewBag.EsteAdmin || ViewBag.UserCurent == Model.UserId)
                {
                        <form method="get">
                            <button type="submit" class="buton_editare" formaction="/Songs/Edit/@Model.Id">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                </svg>
                                Edit
                            </button>
                        </form>
                }
                @if (User.IsInRole("Artist"))
                {
                    <form method="post" asp-controller="Songs" asp-action="AddToAlbum">
                        <input type="hidden" name="SongId" value="@Model.Id" />
                            <div class="d-flex flex-row justify-content-center p-3 border-1 border-top">
                            <div>
                                <select name="AlbumId" class="form-control">
                                    <option selected>Add to Album</option>
                                    @foreach (var songGroup in ViewBag.SongGroups)
                                    {
                                        <option value="@songGroup.Id">@songGroup.AlbumName</option>
                                    }
                                </select>
                            </div>
                            <div>
                                <input type="submit" class="btn btn-success alert-success" value="+" />
                            </div>
                        </div>

                    </form>

                        <div style="text-align: center; margin: 20px 0;">
                            🎵 Total Plays: <strong><span id="play-count">@ViewBag.TotalPlays</span></strong>
                        </div>

                }
                @if (User.IsInRole("User"))
                {
                    <form method="post" asp-controller="Songs" asp-action="AddToPlaylist">
						<input type="hidden" name="SongId" value="@Model.Id" />
						<div class="d-flex flex-row justify-content-center p-3 border-1 border-top">
							<div>
								<select name="PlaylistId" class="form-control">
									<option selected>Add to Playlist</option>
                                    @foreach (var songGroup in ViewBag.SongGroups)
                                    {
                                        <option value="@songGroup.Id">@songGroup.PlaylistName</option>
                                    }
								</select>
							</div>
							<div>
								<input type="submit" class="btn btn-success alert-success" value="+" />
							</div>
						</div>
                    </form>

                    <div id="like-section" style="text-align: center; margin: 20px 0;">
                        <button id="like-button" class="btn btn-primary" onclick="toggleLike(@Model.Id)">
                            ❤️ <span id="like-text">@((ViewBag.LikesCount > 0) ? "Unlike" : "Like")</span>
                            (<span id="like-count">@ViewBag.LikesCount</span>)
                        </button>
                    </div>

                        <div style="text-align: center; margin: 20px 0;">
                            🎵 Total Plays: <strong><span id="play-count">@ViewBag.TotalPlays</span></strong>
                        </div>

                }

                @if (ViewBag.EsteAdmin || ViewBag.UserCurent == Model.UserId)
                {
                        <form method="post" action="/Songs/Delete/@Model.Id">
                            <button type="submit" class="buton_stergere button2" onclick="return confirm('Are you sure you want to delete this song')">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                </svg>
                                Delete
                            </button>
                        </form>
                }

                    
                </div>

                @if (User.IsInRole("Admin"))
                {
                    <div class="d-flex justify-content-center gap-3">
                    <form method="post" asp-controller="Songs" asp-action="AddToPlaylist">
                        <input type="hidden" name="SongId" value="@Model.Id" />
                        <div class="d-flex flex-row justify-content-center p-3 border-1 border-top">
                            <div>
                                <select name="PlaylistId" class="form-control">
                                    <option selected>Add to Playlist</option>
                                    @foreach (var songGroup in ViewBag.SongGroupsPlaylists)
                                    {
                                        @if (songGroup.PlaylistName != null)
                                        {
                                            <option value="@songGroup.Id">@songGroup.PlaylistName</option>
                                        }
                                        else
                                        {
                                            <option value="@songGroup.Id">@songGroup.AlbumName</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div>
                                <input type="submit" class="btn btn-success alert-success" value="+" />
                            </div>
                        </div>
                    </form>

                    <form method="post" asp-controller="Songs" asp-action="AddToAlbum">
                        <input type="hidden" name="SongId" value="@Model.Id" />
                        <div class="d-flex flex-row justify-content-center p-3 border-1 border-top">
                            <div>
                                <select name="AlbumId" class="form-control">
                                    <option selected>Add to Album</option>
                                    @foreach (var songGroup in ViewBag.SongGroupsAlbums)
                                    {
                                        <option value="@songGroup.Id">@songGroup.AlbumName</option>
                                    }
                                </select>
                            </div>
                            <div>
                                <input type="submit" class="btn btn-success alert-success" value="+" />
                            </div>
                        </div>
                    </form>
                    </div>

                    <div style="text-align: center; margin: 20px 0;">
                        🎵 Total Plays: <strong><span id="play-count">@ViewBag.TotalPlays</span></strong>
                    </div>

                }

                <form method="post" action="/Songs/Show/@Model.Id">

                    <div class="card-body">

                        <input type="hidden" name="SongId" value="@Model.Id" />

                        <label>Content</label>
                        <br />

                        <textarea class="form-control" name="Text"></textarea>

                        @Html.ValidationMessage("Text", null, new { @class = "text-danger" })

                        <br /><br />

                        <button class="buton_universal " type="submit">+Add comment</button>

                    </div>

                </form>

            </div>

        </div>

        <div class="col-md-2"></div>

    </div>

</div>
<p></p>



<div class="card mb-3">
    <div class="card-body">
        <div class="col-md-8">

            @foreach (var comm in Model.Comments)
            {

                <div class="card mb-5" style="max-width: 100rem; max-height: 25rem">
                    <div class="card-body d-flex flex-column">

                        <h5>@comm.Text</h5>
                        <p class="text-muted">Posted by: @comm.User.UserName</p>
                        <small>@comm.Date</small>

                    </div>
                    <br>
                    <div class="d-flex justify-content-end">
                        @if (ViewBag.EsteAdmin || comm.UserId == ViewBag.UserCurent)
                        {

                            <form method="post" action="/Comments/Delete/@comm.Id">

                                <button class="btn btn-outline-danger" type="submit" onclick="return confirm('Are you sure you want to delete this comment?')">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                        <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                    </svg>
                                </button>

                            </form>


                        }
                       
                    </div>

                    <br />

                </div>
            }
        </div>

        <div class="col-md-2"></div>

    </div>

</div>

<script>
    function toggleLike(songId) {
        fetch('/Likes/ToggleLike?songId=' + songId, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
                'RequestVerificationToken': document.querySelector("input[name='__RequestVerificationToken']").value
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById("like-count").textContent = data.likeCount;
                document.getElementById("like-text").textContent = data.liked ? "Unlike" : "Like";
            } else {
                alert("Error: Could not like the song.");
            }
        })
        .catch(error => console.error("Error:", error));
    }
</script>

