@model FreeMusicInstantly.Models.Playlist

@if (ViewBag.Msg != null)
{
    <h2 class="@ViewBag.MsgType p-3 rounded-3 text-center mb-5">
        @ViewBag.Msg
    </h2>
}

<br />

<div class="card">
    <img src="~/files/@Model.PhotoCover" alt="@Model.PlaylistName" style="max-width: 300px; height: auto; margin-bottom: 20px;" />

    <div class="card-body">
        <h1>

            <p>
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-journal-album" viewBox="0 0 16 16">
                    <path d="M5.5 4a.5.5 0 0 0-.5.5v5a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5zm1 7a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1z" />
                    <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
                    <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
                </svg> Playlist name: @Model.PlaylistName
            </p>

        </h1>


        <p>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-music-note-beamed" viewBox="0 0 16 16">
                <path d="M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13s1.12-2 2.5-2 2.5.896 2.5 2m9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2" />
                <path fill-rule="evenodd" d="M14 11V2h1v9zM6 3v10H5V3z" />
                <path d="M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4z" />
            </svg> Description: @Model.Description
        </p>
        <p>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-collection" viewBox="0 0 16 16">
                <path d="M2.5 3.5a.5.5 0 0 1 0-1h11a.5.5 0 0 1 0 1zm2-2a.5.5 0 0 1 0-1h7a.5.5 0 0 1 0 1zM0 13a1.5 1.5 0 0 0 1.5 1.5h13A1.5 1.5 0 0 0 16 13V6a1.5 1.5 0 0 0-1.5-1.5h-13A1.5 1.5 0 0 0 0 6zm1.5.5A.5.5 0 0 1 1 13V6a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5z" />
			</svg> Number of songs: @Model.SongPlaylists.Count
        </p>
        <p>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
                <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
            </svg> Creator of the playlist: @Model.User.UserName
        </p>

        @*show songs*@
        @foreach (var songPlaylist in Model.SongPlaylists)
        {
            var song = songPlaylist.Song;
            @*either show everything here (including the player) or redirect to Show View from Song*@
            // put each one in a card
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@song.Title</h5>
                    <p class="card-text">@song.Description</p>
                    <div id="custom-audio-player" style="text-align: center; margin: 30px 0;">
                        <audio id="audio" src="~/files/@song.SongFile"></audio>
                        <button id="play-pause" style="
                                                        width: 60px;
                                                        height: 60px;
                                                        border-radius: 50%;
                                                        background-color: #007bff;
                                                        color: white;
                                                        border: none;
                                                        font-size: 24px;
                                                        cursor: pointer;
                                                            ">
                            ▶
                        </button>
                        <div style="margin-top: 15px;">
                            <input id="seek-bar" type="range" value="0" step="0.1" style="
                            width: 100%;
                            max-width: 600px;
                                ">
                        </div>
                        <div style="margin-top: 10px; font-size: 14px;">
                            <span id="current-time">0:00</span> / <span id="total-time">0:00</span>
                        </div>
                    </div>
                </div>
            </div>
        }


    </div>

</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const audio = document.getElementById('audio');
        const playPauseButton = document.getElementById('play-pause');
        const seekBar = document.getElementById('seek-bar');
        const currentTimeDisplay = document.getElementById('current-time');
        const totalTimeDisplay = document.getElementById('total-time');

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        playPauseButton.addEventListener('click', function () {
            if (audio.paused) {
                audio.play();
                playPauseButton.textContent = '⏸';
            } else {
                audio.pause();
                playPauseButton.textContent = '▶';
            }
        });

        audio.addEventListener('loadedmetadata', function () {
            totalTimeDisplay.textContent = formatTime(audio.duration);
        });

        audio.addEventListener('timeupdate', function () {
            seekBar.value = (audio.currentTime / audio.duration) * 100;
            currentTimeDisplay.textContent = formatTime(audio.currentTime);
        });

        seekBar.addEventListener('input', function () {
            audio.currentTime = (seekBar.value / 100) * audio.duration;
        });
    });
</script>
